package daycare.gui;

import daycare.console.DayCare;
import daycare.entity.ClassRoom;
import daycare.entity.DayCareRatioRule;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

public class AddRoomWindows {
    private JTextField roomIdText;
    private JComboBox stateRulesBox;
    private JTextField maxAgeText;
    private JTextField minAgeText;
    private JTextField maxGroupsText;
    private JTextField maxGroupSizeText;
    private JTextField ratioText;
    private JPanel addRoomPanel;
    private JButton addRoomButton;
    private DayCare dayCare;
    private RoomManageWindows roomManageWindows;

    public void updateStateRatioBox() {
        List<DayCareRatioRule> list = dayCare.getDayCareRatioRules();
        DefaultComboBoxModel tableModel = new DefaultComboBoxModel(list.toArray());
        stateRulesBox.setModel(tableModel);
    }

    public void updateTextField(DayCareRatioRule dayCareRatioRule) {
        roomIdText.setText(String.valueOf(dayCare.getClassRooms().get(dayCare.getClassRooms().size() - 1).getRoomID() + 1));
        maxAgeText.setText(String.valueOf(dayCareRatioRule.getStudentMaxAgeMonths()));
        minAgeText.setText(String.valueOf(dayCareRatioRule.getStudentMinAgeMonths()));
        maxGroupsText.setText(String.valueOf(dayCareRatioRule.getMaxGroups()));
        maxGroupSizeText.setText(String.valueOf(dayCareRatioRule.getMaxGroupSize()));
        ratioText.setText(String.valueOf(dayCareRatioRule.getStudent2TeacherRatio()));
    }

    public void updateTextField() {
        DayCareRatioRule dayCareRatioRule = (DayCareRatioRule) stateRulesBox.getItemAt(stateRulesBox.getSelectedIndex());
        updateTextField(dayCareRatioRule);
    }

    public void listenerSetup() {
        stateRulesBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateTextField();
            }
        });

        addRoomButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ClassRoom classRoom = new ClassRoom();
                classRoom.setRoomID(Integer.valueOf(roomIdText.getText().strip()));
                classRoom.setMaxGroups(Integer.valueOf(maxGroupsText.getText().strip()));
                classRoom.setMaxGroupSize(Integer.valueOf(maxGroupSizeText.getText().strip()));
                classRoom.setStudentMaxAgeMonths(Integer.valueOf(maxAgeText.getText().strip()));
                classRoom.setStudentMinAgeMonths(Integer.valueOf(minAgeText.getText().strip()));
                classRoom.setStudent2TeacherRatio(Integer.valueOf(ratioText.getText().strip()));
                classRoom.setSchoolId(roomManageWindows.getSchoolId());
                dayCare.addRoom(classRoom);
                roomManageWindows.updateRoomTable();
                updateTextField();
            }
        });

    }


//    public static void main(String[] args) {
//        DayCare dayCare = new DayCare();
//        dayCare.demo();
//        new AddRoomWindows(dayCare, new RoomManageWindows(dayCare));
//    }

    public AddRoomWindows(DayCare dayCare, RoomManageWindows roomManageWindows) {
        this.dayCare = dayCare;
        this.roomManageWindows = roomManageWindows;
        JFrame jFrame = new JFrame();
        jFrame.setTitle("Add Room");
        jFrame.setContentPane(addRoomPanel);
        jFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jFrame.pack();
        jFrame.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        jFrame.setLocation(dim.width / 2 - addRoomPanel.getSize().width / 2, dim.height / 2 - addRoomPanel.getSize().height / 2);
        jFrame.setResizable(false);

        listenerSetup();
        updateStateRatioBox();
        updateTextField();

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        addRoomPanel = new JPanel();
        addRoomPanel.setLayout(new GridBagLayout());
        addRoomPanel.setMinimumSize(new Dimension(466, 234));
        roomIdText = new JTextField();
        roomIdText.setMinimumSize(new Dimension(100, 30));
        roomIdText.setPreferredSize(new Dimension(100, 30));
        roomIdText.setText("");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(roomIdText, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        addRoomPanel.add(spacer2, gbc);
        maxAgeText = new JTextField();
        maxAgeText.setMinimumSize(new Dimension(100, 30));
        maxAgeText.setPreferredSize(new Dimension(100, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(maxAgeText, gbc);
        stateRulesBox = new JComboBox();
        stateRulesBox.setMinimumSize(new Dimension(100, 30));
        stateRulesBox.setPreferredSize(new Dimension(78, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(stateRulesBox, gbc);
        minAgeText = new JTextField();
        minAgeText.setMinimumSize(new Dimension(100, 30));
        minAgeText.setPreferredSize(new Dimension(100, 30));
        minAgeText.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(minAgeText, gbc);
        maxGroupsText = new JTextField();
        maxGroupsText.setMinimumSize(new Dimension(100, 30));
        maxGroupsText.setPreferredSize(new Dimension(100, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(maxGroupsText, gbc);
        maxGroupSizeText = new JTextField();
        maxGroupSizeText.setMinimumSize(new Dimension(100, 30));
        maxGroupSizeText.setPreferredSize(new Dimension(100, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(maxGroupSizeText, gbc);
        ratioText = new JTextField();
        ratioText.setMinimumSize(new Dimension(100, 30));
        ratioText.setPreferredSize(new Dimension(100, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(ratioText, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.VERTICAL;
        addRoomPanel.add(spacer3, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("State Rule: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Room ID: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Max age: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Max group size: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Min age: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label5, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Max groups: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Ratio (students / teachers)");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        addRoomPanel.add(label7, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        addRoomPanel.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        addRoomPanel.add(spacer7, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 10;
        gbc.fill = GridBagConstraints.VERTICAL;
        addRoomPanel.add(spacer8, gbc);
        addRoomButton = new JButton();
        addRoomButton.setText("Add Room");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.gridwidth = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addRoomPanel.add(addRoomButton, gbc);
        final JPanel spacer9 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.VERTICAL;
        addRoomPanel.add(spacer9, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return addRoomPanel;
    }

}
