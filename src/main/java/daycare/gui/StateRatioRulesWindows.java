package daycare.gui;

import daycare.console.DayCare;
import daycare.entity.DayCareRatioRule;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

public class StateRatioRulesWindows {
    private JTable stateRulesTable;
    private JTextField ratioRuleIdText;
    private JTextField maxAgeText;
    private JButton removeRuleButton;
    private JButton addRuleButton;
    private JPanel stateRatioPane;
    private JTextField ratioText;
    private JTextField minAgeText;
    private JTextField maxGroupsText;
    private JTextField maxGroupSizeText;
    private JScrollPane stateRulesScroll;
    private DayCare dayCare;

    public void updateStateRuleTable() {
        String stateRules[] = {"Ratio Rule ID", "Ratio", "Max Age", "Min Age", "Max groups", "Max group size"};
        List<DayCareRatioRule> stateRulesList = dayCare.getDayCareRatioRules();
        int rowLength = stateRulesList.size();
        int columnsLength = stateRules.length;
        String[][] data = new String[rowLength][columnsLength];
        for (int i = 0; i < rowLength; i++) {
            DayCareRatioRule sateRule = stateRulesList.get(i);
            data[i][0] = String.valueOf(sateRule.getRatioRuleID());
            data[i][1] = String.valueOf(sateRule.getStudent2TeacherRatio());
            data[i][2] = String.valueOf(sateRule.getStudentMaxAgeMonths());
            data[i][3] = String.valueOf(sateRule.getStudentMinAgeMonths());
            data[i][4] = String.valueOf(sateRule.getMaxGroups());
            data[i][5] = String.valueOf(sateRule.getMaxGroupSize());

        }
        DefaultTableModel tableModel = new DefaultTableModel(data, stateRules);
        stateRulesTable.setModel(tableModel);
    }

    public void addRule() {
        DayCareRatioRule dayCareRatioRule = new DayCareRatioRule();
        dayCareRatioRule.setRatioRuleID(Integer.valueOf(ratioRuleIdText.getText()));
        dayCareRatioRule.setMaxGroups(Integer.valueOf(maxGroupsText.getText()));
        dayCareRatioRule.setStudent2TeacherRatio(Integer.valueOf(ratioRuleIdText.getText()));
        dayCareRatioRule.setMaxGroupSize(Integer.valueOf(maxGroupSizeText.getText()));
        dayCareRatioRule.setStudentMaxAgeMonths(Integer.valueOf(maxGroupSizeText.getText()));
        dayCareRatioRule.setStudentMinAgeMonths(Integer.valueOf(minAgeText.getText()));
        dayCare.addStateRule(dayCareRatioRule);
    }

    public void fillId() {
        int size = dayCare.getDayCareRatioRules().size();
        ratioRuleIdText.setText(String.valueOf(dayCare.getDayCareRatioRules().get(size - 1).getRatioRuleID() + 1));
    }

    public void listenerSetup() {
        removeRuleButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = stateRulesTable.getSelectedRow();
                if (row != -1) {
                    int ruleId = Integer.valueOf((String) stateRulesTable.getValueAt(row, 0));
                    dayCare.removeStatesRuleById(ruleId);
                    updateStateRuleTable();
                }
            }
        });
        addRuleButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addRule();
                fillId();
                updateStateRuleTable();
            }
        });
    }


//    public static void main(String[] args) {
//        DayCare dayCare = new DayCare();
//        dayCare.demo();
//        new StateRatioRulesWindows(dayCare);
//    }

    public StateRatioRulesWindows(DayCare dayCare) {
        this.dayCare = dayCare;
        JFrame jFrame = new JFrame();
        jFrame.setTitle("State Ratio Rules Manage");
        jFrame.setContentPane(stateRatioPane);
        jFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jFrame.pack();
        jFrame.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        jFrame.setLocation(dim.width / 2 - stateRatioPane.getSize().width / 2, dim.height / 2 - stateRatioPane.getSize().height / 2);
        jFrame.setResizable(false);
        updateStateRuleTable();
        fillId();
        listenerSetup();

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        stateRatioPane = new JPanel();
        stateRatioPane.setLayout(new GridBagLayout());
        stateRatioPane.setMinimumSize(new Dimension(777, 489));
        stateRulesScroll = new JScrollPane();
        stateRulesScroll.setMinimumSize(new Dimension(300, 350));
        stateRulesScroll.setPreferredSize(new Dimension(450, 420));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.gridheight = 14;
        gbc.fill = GridBagConstraints.BOTH;
        stateRatioPane.add(stateRulesScroll, gbc);
        stateRulesTable = new JTable();
        stateRulesTable.setAutoResizeMode(0);
        stateRulesScroll.setViewportView(stateRulesTable);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(spacer1, gbc);
        ratioRuleIdText = new JTextField();
        ratioRuleIdText.setMinimumSize(new Dimension(100, 30));
        ratioRuleIdText.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(ratioRuleIdText, gbc);
        maxAgeText = new JTextField();
        maxAgeText.setMinimumSize(new Dimension(100, 30));
        maxAgeText.setPreferredSize(new Dimension(150, 30));
        maxAgeText.setText("20");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(maxAgeText, gbc);
        ratioText = new JTextField();
        ratioText.setMinimumSize(new Dimension(100, 30));
        ratioText.setPreferredSize(new Dimension(150, 30));
        ratioText.setText("10");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(ratioText, gbc);
        removeRuleButton = new JButton();
        removeRuleButton.setText("Remove Rule");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 16;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(removeRuleButton, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Ratio Rule ID: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        stateRatioPane.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Max Age(month): ");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        stateRatioPane.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Ratio(students/teachers): ");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        stateRatioPane.add(label3, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer2, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Min Age(month): ");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        stateRatioPane.add(label4, gbc);
        minAgeText = new JTextField();
        minAgeText.setMinimumSize(new Dimension(100, 30));
        minAgeText.setPreferredSize(new Dimension(150, 30));
        minAgeText.setText("10");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(minAgeText, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Max Groups: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 9;
        gbc.anchor = GridBagConstraints.WEST;
        stateRatioPane.add(label5, gbc);
        maxGroupsText = new JTextField();
        maxGroupsText.setMinimumSize(new Dimension(100, 30));
        maxGroupsText.setPreferredSize(new Dimension(150, 30));
        maxGroupsText.setText("3");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 9;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(maxGroupsText, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Max Group Size: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 11;
        gbc.anchor = GridBagConstraints.WEST;
        stateRatioPane.add(label6, gbc);
        maxGroupSizeText = new JTextField();
        maxGroupSizeText.setMinimumSize(new Dimension(100, 30));
        maxGroupSizeText.setPreferredSize(new Dimension(150, 30));
        maxGroupSizeText.setText("10");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 11;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(maxGroupSizeText, gbc);
        addRuleButton = new JButton();
        addRuleButton.setText("Add Rule");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 13;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(addRuleButton, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        stateRatioPane.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 17;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 12;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer7, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 10;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer8, gbc);
        final JPanel spacer9 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer9, gbc);
        final JPanel spacer10 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer10, gbc);
        final JPanel spacer11 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer11, gbc);
        final JPanel spacer12 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer12, gbc);
        final JPanel spacer13 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 15;
        gbc.fill = GridBagConstraints.VERTICAL;
        stateRatioPane.add(spacer13, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return stateRatioPane;
    }

}
